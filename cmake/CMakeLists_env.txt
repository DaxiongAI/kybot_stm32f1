CMAKE_MINIMUM_REQUIRED(VERSION 2.8.9)

# This file config CMake env
# 该命令返回值输出带\n
#execute_process(COMMAND whoami RESULT_VARIABLE RES_VAL OUTPUT_VARIABLE OUT_VAL)

# 1.
# 该命令返回值输出不带\n
#exec_program(whoami RETURN_VARIABLE RET_VAL OUTPUT_VARIABLE OUT_VAL)
#set(user_name ${OUT_VAL})

# 2.      
# 直接使用系统环境变量        
#set(user_name $ENV{USER})
#set(prj_root "/home/${user_name}/ftu/arm")
#exec_program("which arm-none-eabi-gcc" RETURN_VARIABLE RET_VAL OUTPUT_VARIABLE OUT_VAL)

# 设置使用哪种类型的编译器
#set(USE_WHICH_COMPILER "win_keil") 
#set(USE_WHICH_COMPILER "win_gcc") 
set(USE_WHICH_COMPILER "linux_gcc") 

# 设置编译器绝对路径，不包含bin目录
if(${USE_WHICH_COMPILER} STREQUAL "linux_gcc")
        # Linux中使用
        set(TOOLCHAIN_PREFIX "/home/zwb/gcc-arm-none-eabi-4_9-2015q3")
        # 设置编译器gcc前缀    
        set(TARGET_TRIPLET "arm-none-eabi")
elseif(${USE_WHICH_COMPILER} STREQUAL "win_gcc")
        # cygwin中使用
        set(TOOLCHAIN_PREFIX "${CMAKE_CURRENT_SOURCE_DIR}/toolchain")
        # 设置编译器gcc前缀    
        set(TARGET_TRIPLET "native-arm-none-eabi")

elseif(${USE_WHICH_COMPILER} STREQUAL "win_keil")
        # cygwin中使用
        # 使用keil的编译器，需要修改c flag，没有测试过
        set(TOOLCHAIN_PREFIX "${CMAKE_CURRENT_SOURCE_DIR}/toolchain")
        # 设置编译器gcc前缀    
        set(TARGET_TRIPLET "native-arm")
else()
        message([FATAL_ERROR] "please set the compiler which you want to use in the file CMakeLists_env.txt that in the project source sub directory:cmake")
endif()

# 设置板子晶振频率
set(STM32_HSE_VALUE 8000000)
set(STM32_CHIP STM32F103C8)
